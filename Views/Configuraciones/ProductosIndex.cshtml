@model List<Packing.Pedidos.Models.Productos.ProductoListaDto>
<style>
    .modal-header {
        background-color: #2C9C56;
        color: white;
    }

    .btn-primary {
        background-color: #2C9C56;
        border: none;
    }

        .btn-primary:hover {
            background-color: #559754;
        }
</style>
<div class="container-fluid py-5">
    <h2 class="align-content-start mb-4">Lista de productos</h2>
    <hr />
    <div class="card shadow-sm rounded p-3">
        <table id="productosTable" class="table table-striped table-bordered table-responsive-md" style="width:100%">
            <thead class="table-info">
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th>Formato</th>
                    <th>Grupo</th>
                    <th>Presentación</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var producto in Model)
                {
                    <tr>
                        <td>@producto.Id</td>
                        <td>@producto.Nombre</td>
                        <td>@producto.Formato</td>
                        <td>@producto.Grupo</td>
                        <td>@producto.Presentacion</td>
                        <td class="align-content-center">
                            <button class="btn btn-warning btn-sm btnEditar" data-id="@producto.Id">
                                <i class="bi bi-pencil-square"></i> Editar
                            </button>
                            <button class="btn btn-danger btn-sm btnEliminar" data-id="@producto.Id">
                                <i class="bi bi-trash"></i> Eliminar
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <hr />
    <div class="align-content-lg-start align-content-md-center mt-2" data-bs-toggle="modal" data-bs-target="#modalCrearProducto">
        <a class="btn btn-outline-success">Crear nuevo producto</a>
    </div>
</div>

<!-- Modal para Crear Producto -->
<div class="modal fade" id="modalCrearProducto" tabindex="-1" aria-labelledby="modalCrearProductoLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header text-white">
                <h5 class="modal-title" id="modalCrearProductoLabel">Crear Producto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="formCrearProducto">
                    <div class="row">
                        <div class="col-sm-12 col-md-8">
                            <div class="mb-3">
                                <label for="nombre" class="form-label">Nombre</label>
                                <input type="text" class="form-control" id="nombre" name="Nombre" maxlength="225" required>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4">
                            <div class="mb-3">
                                <label for="grupoId" class="form-label">Grupo</label>
                                <select class="form-select" id="grupoId" name="GrupoId" required>
                                    <option value="">Seleccione un grupo</option>
                                    @foreach (var grupo in ViewBag.Grupos)
                                    {
                                        <option value="@grupo.Id">@grupo.Nombre</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12 col-md-6">
                            <div class="mb-3">
                                <label for="formatoId" class="form-label">Formato</label>
                                <select class="form-select" id="formatoId" name="FormatoId" required>
                                    <option value="">Seleccione un formato</option>
                                    @foreach (var formato in ViewBag.Formatos)
                                    {
                                        <option value="@formato.Id">@formato.Nombre</option>
                                    }
                                </select>
                            </div>

                        </div>
                        <div class="col-sm-12 col-md-6">
                            <div class="mb-3">
                                <label for="presentacionId" class="form-label">Presentación</label>
                                <select class="form-select" id="presentacionId" name="PresentacionId" required>
                                    <option value="">Seleccione una presentación</option>
                                    @foreach (var presentacion in ViewBag.Presentaciones)
                                    {
                                        <option value="@presentacion.Id">@presentacion.Nombre</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Editar Producto -->
<div class="modal fade" id="modalEditarProducto" tabindex="-1" aria-labelledby="modalEditarProductoLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalEditarProductoLabel">Editar Producto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="productoId">

                <div class="mb-3">
                    <label for="nombreEditar" class="form-label">Nombre</label>
                    <input type="text" class="form-control" id="nombreEditar" required>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label for="formatoIdEditar" class="form-label">Formato</label>
                            <select class="form-select" id="formatoIdEditar">
                                @foreach (var formato in ViewBag.Formatos)
                                {
                                    <option value="@formato.Id">@formato.Nombre</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="mb-3">
                            <label for="grupoIdEditar" class="form-label">Grupo</label>
                            <select class="form-select" id="grupoIdEditar">
                                @foreach (var grupo in ViewBag.Grupos)
                                {
                                    <option value="@grupo.Id">@grupo.Nombre</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="mb-3">
                            <label for="presentacionIdEditar" class="form-label">Presentación</label>
                            <select class="form-select" id="presentacionIdEditar">
                                @foreach (var presentacion in ViewBag.Presentaciones)
                                {
                                    <option value="@presentacion.Id">@presentacion.Nombre</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="btnGuardarCambios">Guardar Cambios</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript" asp-append-version="true">
        $(document).ready(function() {
            $('#productosTable').DataTable({
                "language": {
                    "lengthMenu": "Mostrar _MENU_ registros por página",
                    "zeroRecords": "No se encontraron resultados",
                    "info": "Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "No hay registros disponibles",
                    "infoFiltered": "(filtrado de _MAX_ registros totales)",
                    "search": "Buscar:",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                },
                "paging": true,
                "ordering": true,
                "info": true,
                "autoWidth": false
            });
        });

        document.getElementById("formCrearProducto").addEventListener("submit", function (event) {
            event.preventDefault();

            let formData = new FormData(this);

            fetch('@Url.Action("CrearProducto", "Configuraciones")', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: '¡Producto creado!',
                            text: 'El producto ha sido agregado correctamente.',
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error al crear el producto',
                            html: '<ul>' + data.errors.map(error => `<li>${error}</li>`).join('') + '</ul>',
                            confirmButtonColor: '#d33'
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Ocurrió un error',
                        text: 'No se pudo conectar con el servidor.',
                        confirmButtonColor: '#d33'
                    });
                    console.error('Error:', error);
                });
        });

        $(".btnEditar").click(function() {
            let id = $(this).data("id");

            fetch(`/Configuraciones/Producto/Obtener/${id}`)
                .then(response => response.json())
                .then(data => {
                    $("#productoId").val(data.id);
                    $("#nombreEditar").val(data.nombre);
                    $("#nombreBusquedaEditar").val(data.nombreBusqueda);

                    // Asignar los valores correctos a los select
                    $("#formatoIdEditar").val(data.formatoId);
                    $("#grupoIdEditar").val(data.grupoId);
                    $("#presentacionIdEditar").val(data.presentacionId);

                    $("#modalEditarProducto").modal("show");
                });
        });

        $(".btnEliminar").click(function() {
            let id = $(this).data("id");

            Swal.fire({
                title: "¿Estás seguro?",
                text: "Esta acción no se puede deshacer y los clientes dejarán de verlo disponible.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Sí, eliminar"
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`Configuraciones/Producto/Eliminar/${id}`, { method: "DELETE" })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire("¡Eliminado!", "El producto ha sido eliminado.", "success").then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire("Error", "No se pudo eliminar el producto.", "error");
                            }
                        });
                }
            });
        });
    
            
        $("#btnGuardarCambios").click(function() {
            let id = $("#productoId").val();
            let nombre = $("#nombreEditar").val();
            let formatoId = $("#formatoIdEditar").val();
            let grupoId = $("#grupoIdEditar").val();
            let presentacionId = $("#presentacionIdEditar").val();

            fetch(`@Url.Action("Actualizar","Configuraciones")`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        Id: id,
                        Nombre: nombre,
                        FormatoId: formatoId,
                        GrupoId: grupoId,
                        PresentacionId: presentacionId
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Producto actualizado',
                            text: 'Los cambios han sido guardados correctamente.',
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'No se pudo actualizar el producto.'
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'No se pudo conectar con el servidor.'
                    });
                });
        });
    </script>

}
